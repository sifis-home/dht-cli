name: dht-cli

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'crates/**'
      - 'fuzz/**'
      - '.github/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    branches:
      - master
    paths:
      - 'src/**'
      - 'crates/**'
      - 'fuzz/**'
      - '.github/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

jobs:

################################## LEGAL AND FORMAT LAYER ######################

  reuse:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3


    - name: REUSE Compliance Check
      uses: fsfe/reuse-action@v1

  clippy-rustfmt:

    strategy:
      matrix:
        platform: [ubuntu-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: clippy, rustfmt

    - name: Run rustfmt
      run:
        cargo fmt --all -- --check --verbose

    - name: Run cargo clippy
      uses: giraffate/clippy-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        clippy_flags: --all-targets -- -D warnings
        reporter: github-pr-review

  static-code-analysis:

    env:
      RCA_LINK: https://github.com/mozilla/rust-code-analysis/releases/download
      RCA_VERSION: v0.0.25

    strategy:
      matrix:
        conf:
          - ubuntu
          - windows
        include:
          - conf: ubuntu
            platform: ubuntu-latest
            dir: $PWD
          - conf: windows
            platform: windows-latest
            dir: src/ # FIXME Broken on Windows with absolute paths, so using src/ as path for now

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3

    - name: Install rust-code-analysis on Ubuntu
      if: matrix.conf == 'ubuntu'
      run: |
        mkdir -p $HOME/.local/bin
        curl -L "$RCA_LINK/$RCA_VERSION/rust-code-analysis-linux-cli-x86_64.tar.gz" |
        tar xz -C $HOME/.local/bin
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install rust-code-analysis on Windows
      if: matrix.conf == 'windows'
      run: |
        mkdir -p $HOME/bin
        curl -LO "$Env:RCA_LINK/$env:RCA_VERSION/rust-code-analysis-win-cli-x86_64.zip"
        7z e -y "rust-code-analysis-win-cli-x86_64.zip" -o"$HOME/bin"
        echo "$HOME/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Run rust-code-analysis
      run: |
        mkdir $HOME/rca-json
        rust-code-analysis-cli --metrics -O json --pr -o "$HOME/rca-json" -p ${{ matrix.dir }}

    - name: Upload rust-code-analysis json
      uses: actions/upload-artifact@v3
      with:
        name: rca-json-${{ matrix.conf }}
        path: ~/rca-json

################################## BUILD AND DOCS LAYER ########################

  build:

    needs: [reuse, clippy-rustfmt, static-code-analysis]

    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Build
      run: cargo build --verbose

  docs:

    needs: [reuse, clippy-rustfmt, static-code-analysis]

    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Generate docs
      run: cargo doc --verbose --no-deps
